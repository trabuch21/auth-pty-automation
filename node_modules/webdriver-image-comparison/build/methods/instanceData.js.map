{"version":3,"file":"instanceData.js","sourceRoot":"","sources":["../../lib/methods/instanceData.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,0CAU0B;AAC1B,gFAA2E;AAO3E,SAA8B,uBAAuB,CACnD,QAAkB,EAClB,eAAgC,EAChC,gBAAyB;;;;;wBAGD,WAAM,QAAQ,CAAC,6BAAmB,CAAC,EAAA;;oBAArD,WAAW,GAAO,SAAmC;oBACpD,uBAAuB,GAA0E,eAAe,wBAAzF,EAAE,oBAAoB,GAAoD,eAAe,qBAAnE,EAAE,WAAW,GAAuC,eAAe,YAAtD,EAAE,mBAAmB,GAAkB,eAAe,oBAAjC,EAAE,YAAY,GAAI,eAAe,aAAnB,CAAoB;oBAGlH,SAAS,GAAG,sBAAc,CAAC,YAAY,CAAC,CAAC;oBACzC,KAAK,GAAG,kBAAU,CAAC,YAAY,CAAC,CAAC;oBACjC,QAAQ,GAAG,qBAAa,CAAC,YAAY,CAAC,CAAC;oBACvC,eAAe,GAAG,0BAAkB,CAAC,WAAW,CAAC,CAAC;oBAClD,qBAAqB,GAAG,gCAAwB,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;oBAC5E,4BAA4B,GAAG,uCAA+B,CAAC,YAAY,EAAE,mBAAmB,CAAC,CAAC;oBAClG,+BAA+B,GAAG,0CAAkC,CAAC,YAAY,EAAE,mBAAmB,CAAC,CAAC;oBACxG,iBAAiB,GAAG,kCAA0B,CAAC;wBACnD,YAAY,cAAA;wBACZ,WAAW,aAAA;wBACX,mBAAmB,qBAAA;wBACnB,uBAAuB,yBAAA;wBACvB,gBAAgB,kBAAA;qBACjB,CAAC,CAAC;oBACG,cAAc,GAAG,+BAAuB,CAAC,EAAC,YAAY,cAAA,EAAE,WAAW,aAAA,EAAE,oBAAoB,sBAAA,EAAE,gBAAgB,kBAAA,EAAC,CAAC,CAAC;oBAGpH,0CACK,CAAC,WAAW,CAAC,GACb,CAAC,eAAe,CAAC,KACpB,uBAAuB,EAAE,iBAAiB,EAC1C,SAAS,WAAA;4BACT,+BAA+B,iCAAA;4BAC/B,4BAA4B,8BAAA;4BAC5B,KAAK,OAAA;4BACL,QAAQ,UAAA;4BACR,eAAe,iBAAA;4BACf,qBAAqB,uBAAA,EACrB,oBAAoB,EAAE,cAAc,KACpC;;;;CACH;AAxCD,0CAwCC","sourcesContent":["import {\n  checkIsMobile,\n  checkAndroidChromeDriverScreenshot,\n  checkAndroidNativeWebScreenshot,\n  checkIsAndroid,\n  checkIsIos,\n  checkTestInBrowser,\n  checkTestInMobileBrowser,\n  getAddressBarShadowPadding,\n  getToolBarShadowPadding,\n} from '../helpers/utils';\nimport getScreenDimensions from '../clientSideScripts/getScreenDimensions';\nimport {Executor} from './methods.interface';\nimport {EnrichedInstanceData, InstanceOptions} from './instanceData.interfaces';\n\n/**\n * Enrich the instance data with more data\n */\nexport default async function getEnrichedInstanceData(\n  executor: Executor,\n  instanceOptions: InstanceOptions,\n  addShadowPadding: boolean,\n): Promise<EnrichedInstanceData> {\n  // Get the current browser data\n  const browserData:any = await executor(getScreenDimensions);\n  const {addressBarShadowPadding, toolBarShadowPadding, browserName, nativeWebScreenshot, platformName} = instanceOptions;\n\n  // Determine some constants\n  const isAndroid = checkIsAndroid(platformName);\n  const isIos = checkIsIos(platformName);\n  const isMobile = checkIsMobile(platformName);\n  const isTestInBrowser = checkTestInBrowser(browserName);\n  const isTestInMobileBrowser = checkTestInMobileBrowser(platformName, browserName);\n  const isAndroidNativeWebScreenshot = checkAndroidNativeWebScreenshot(platformName, nativeWebScreenshot);\n  const isAndroidChromeDriverScreenshot = checkAndroidChromeDriverScreenshot(platformName, nativeWebScreenshot);\n  const addressBarPadding = getAddressBarShadowPadding({\n    platformName,\n    browserName,\n    nativeWebScreenshot,\n    addressBarShadowPadding,\n    addShadowPadding,\n  });\n  const toolBarPadding = getToolBarShadowPadding({platformName, browserName, toolBarShadowPadding, addShadowPadding});\n\n  // Return the new instance data object\n  return {\n    ...(browserData),\n    ...(instanceOptions),\n    addressBarShadowPadding: addressBarPadding,\n    isAndroid,\n    isAndroidChromeDriverScreenshot,\n    isAndroidNativeWebScreenshot,\n    isIos,\n    isMobile,\n    isTestInBrowser,\n    isTestInMobileBrowser,\n    toolBarShadowPadding: toolBarPadding,\n  };\n}\n"]}