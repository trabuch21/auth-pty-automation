{"version":3,"file":"beforeScreenshot.js","sourceRoot":"","sources":["../../lib/helpers/beforeScreenshot.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sEAAiE;AACjE,kEAA6D;AAC7D,yCAA0C;AAC1C,iCAA2F;AAC3F,wDAA8D;AAG9D,8EAAyE;AAKzE,SAA8B,gBAAgB,CAC5C,QAAkB,EAClB,OAAgC,EAChC,gBAAiC;IAAjC,iCAAA,EAAA,wBAAiC;;;;;;oBAG3B,KAAmD,OAAO,CAAC,YAAY,EAAtE,WAAW,iBAAA,EAAE,mBAAmB,yBAAA,EAAE,YAAY,kBAAA,CAAyB;oBAE5E,uBAAuB,GAMrB,OAAO,wBANc,EACvB,mBAAmB,GAKjB,OAAO,oBALU,EACnB,YAAY,GAIV,OAAO,aAJG,EACZ,YAAY,GAGV,OAAO,aAHG,EACZ,cAAc,GAEZ,OAAO,eAFK,EACd,oBAAoB,GAClB,OAAO,qBADW,CACV;oBACN,iBAAiB,GAAG,kCAA0B,CAAC;wBACnD,YAAY,cAAA;wBACZ,WAAW,aAAA;wBACX,mBAAmB,qBAAA;wBACnB,uBAAuB,yBAAA;wBACvB,gBAAgB,kBAAA;qBACjB,CAAC,CAAC;oBACG,cAAc,GAAG,+BAAuB,CAAC,EAAC,YAAY,cAAA,EAAE,WAAW,aAAA,EAAE,oBAAoB,sBAAA,EAAE,gBAAgB,kBAAA,EAAC,CAAC,CAAC;yBAGjH,YAAY,EAAZ,cAAY;oBACb,WAAM,QAAQ,CAAC,wBAAc,EAAE,YAAY,CAAC,EAAA;;oBAA5C,SAA4C,CAAC;;;yBAI3C,CAAA,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,CAAA,EAApD,cAAoD;oBACtD,WAAM,QAAQ,CAAC,4BAAkB,EAAE,EAAC,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,cAAc,EAAC,EAAE,IAAI,CAAC,EAAA;;oBAAtF,SAAsF,CAAC;;;yBAIrF,CAAA,mBAAmB,IAAI,qBAAa,CAAC,YAAY,CAAC,CAAA,EAAlD,cAAkD;oBACpD,WAAM,QAAQ,CAAC,sBAAY,EAAE,EAAC,iBAAiB,mBAAA,EAAE,mBAAmB,qBAAA,EAAE,EAAE,EAAE,yBAAa,EAAE,cAAc,gBAAA,EAAC,CAAC,EAAA;;oBAAzG,SAAyG,CAAC;;;oBAItG,eAAe,cACnB,uBAAuB,EAAE,OAAO,CAAC,uBAAuB,EACxD,oBAAoB,EAAE,OAAO,CAAC,oBAAoB,IAC/C,CAAC,OAAO,CAAC,YAAY,CAAC,CAC1B,CAAC;oBAEF,WAAO,sBAAuB,CAAC,QAAQ,EAAE,eAAe,EAAE,gBAAgB,CAAC,EAAC;;;;CAC7E;AA/CD,mCA+CC","sourcesContent":["import hideScrollBars from '../clientSideScripts/hideScrollbars';\nimport setCustomCss from '../clientSideScripts/setCustomCss';\nimport {CUSTOM_CSS_ID} from './constants';\nimport {checkIsMobile, getAddressBarShadowPadding, getToolBarShadowPadding} from './utils';\nimport getEnrichedInstanceData from '../methods/instanceData';\nimport {BeforeScreenshotOptions, BeforeScreenshotResult} from './beforeScreenshot.interface';\nimport {Executor} from '../methods/methods.interface';\nimport hideRemoveElements from '../clientSideScripts/hideRemoveElements';\n\n/**\n * Methods that need to be executed before a screenshot will be taken\n */\nexport default async function beforeScreenshot(\n  executor: Executor,\n  options: BeforeScreenshotOptions,\n  addShadowPadding: boolean = false\n): Promise<BeforeScreenshotResult> {\n\n  const {browserName, nativeWebScreenshot, platformName} = options.instanceData;\n  const {\n    addressBarShadowPadding,\n    disableCSSAnimation,\n    hideElements,\n    noScrollBars,\n    removeElements,\n    toolBarShadowPadding,\n  } = options;\n  const addressBarPadding = getAddressBarShadowPadding({\n    platformName,\n    browserName,\n    nativeWebScreenshot,\n    addressBarShadowPadding,\n    addShadowPadding,\n  });\n  const toolBarPadding = getToolBarShadowPadding({platformName, browserName, toolBarShadowPadding, addShadowPadding});\n\n  // Hide the scrollbars\n  if(noScrollBars) {\n    await executor(hideScrollBars, noScrollBars);\n  }\n\n  // Hide and or Remove elements\n  if (hideElements.length > 0 || removeElements.length > 0) {\n    await executor(hideRemoveElements, {hide: hideElements, remove: removeElements}, true);\n  }\n\n  // Set some custom css\n  if (disableCSSAnimation || checkIsMobile(platformName)) {\n    await executor(setCustomCss, {addressBarPadding, disableCSSAnimation, id: CUSTOM_CSS_ID, toolBarPadding});\n  }\n\n  // Get all the needed instance data\n  const instanceOptions = {\n    addressBarShadowPadding: options.addressBarShadowPadding,\n    toolBarShadowPadding: options.toolBarShadowPadding,\n    ...(options.instanceData),\n  };\n\n  return getEnrichedInstanceData(executor, instanceOptions, addShadowPadding);\n}\n"]}