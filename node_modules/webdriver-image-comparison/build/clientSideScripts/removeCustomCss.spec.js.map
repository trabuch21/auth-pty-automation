{"version":3,"file":"removeCustomCss.spec.js","sourceRoot":"","sources":["../../lib/clientSideScripts/removeCustomCss.spec.ts"],"names":[],"mappings":";;AAAA,qDAAgD;AAEhD,QAAQ,CAAC,iBAAiB,EAAE;IAC1B,EAAE,CAAC,yCAAyC,EAAE;QAE5C,IAAM,EAAE,GAAG,MAAM,CAAC;QAClB,IAAM,OAAO,GAAG,mBAAmB,CAAC;QACpC,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAE,CAAC,CAAE,CAAC;QACzE,IAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAE9C,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;QACd,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAExB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,eAAe,EAAE,CAAC;QAEpD,yBAAe,CAAC,EAAE,CAAC,CAAC;QAEpB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,eAAe,EAAE,CAAC;IACtD,CAAC,CAAC,CAAC;IAGH,EAAE,CAAC,gDAAgD,EAAE;QACnD,IAAM,EAAE,GAAG,MAAM,CAAC;QAElB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,eAAe,EAAE,CAAC;QAEpD,yBAAe,CAAC,EAAE,CAAC,CAAC;QAEpB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,eAAe,EAAE,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE;QAC/C,IAAM,EAAE,GAAG,MAAM,CAAC;QAClB,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;QAEvD,yBAAe,CAAC,EAAE,CAAC,CAAC;QAEpB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import removeCustomCss from './removeCustomCss';\n\ndescribe('removeCustomCss', ()=>{\n  it('should be able to remove the custom css', ()=>{\n    // Set up our document body\n    const id = 'test';\n    const cssText = 'body:{width:100%}';\n    const head = document.head || document.getElementsByTagName('head')[ 0 ];\n    const style = document.createElement('style');\n\n    style.id = id;\n    style.appendChild(document.createTextNode(cssText));\n    head.appendChild(style);\n\n    expect(document.head.textContent).toMatchSnapshot();\n\n    removeCustomCss(id);\n\n    expect(document.head.textContent).toMatchSnapshot();\n  });\n\n\n  it('should do nothing if custom css is not present', () => {\n    const id = 'test';\n\n    expect(document.head.textContent).toMatchSnapshot();\n\n    removeCustomCss(id);\n\n    expect(document.head.textContent).toMatchSnapshot();\n  });\n  \n  it('should do nothing if document.head is null', () => {\n    const id = 'test';\n    Object.defineProperty(document, 'head', {value: null});    \n\n    removeCustomCss(id);\n\n    expect(document.head).toBe(null);\n  });\n});\n"]}