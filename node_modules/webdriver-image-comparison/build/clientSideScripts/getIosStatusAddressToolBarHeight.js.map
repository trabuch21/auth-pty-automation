{"version":3,"file":"getIosStatusAddressToolBarHeight.js","sourceRoot":"","sources":["../../lib/clientSideScripts/getIosStatusAddressToolBarHeight.ts"],"names":[],"mappings":";;AAMA,SAAwB,gCAAgC,CAAC,UAAsB;IAE7E,IAAM,KAAK,GAAG,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;IACrE,IAAM,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC5C,IAAM,cAAc,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC;IAG1C,IAAA,kBAA+B,EAA9B,gBAAK,EAAE,kBAAuB,CAAC;IACtC,IAAM,eAAe,GAAG,CAAC,KAAK,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,CAAC,CAAC;IAGxF,IAAA,8BAAU,EAAE,gCAAW,CAAW;IACzC,IAAM,aAAa,GAAG,CACpB,CAAC,WAAW,GAAG,cAAc,CAAC,WAAW,GAAG,cAAc,CAAC,cAAc,CAAC,KAAK,MAAM;QACrF,CAAC,UAAU,GAAG,cAAc,CAAC,WAAW,GAAG,cAAc,CAAC,cAAc,CAAC,KAAK,KAAK,CACpF,CAAC;IAGF,IAAI,eAAe,CAAC;IACpB,IAAI,eAAe,EAAE;QACnB,eAAe,GAAG,cAAc,CAAC,YAAY,CAAC;KAC/C;SAAM,IAAI,aAAa,EAAE;QACxB,eAAe,GAAG,cAAc,CAAC,cAAc,CAAC;KACjD;SAAM;QACL,eAAe,GAAG,cAAc,CAAC,UAAU,CAAC;KAC7C;IAED,IAAM,sBAAsB,GAAG,eAAe,GAAG,cAAc,CAAC,WAAW,CAAC;IAC5E,IAAM,aAAa,GAAG,MAAM,GAAG,WAAW,GAAG,sBAAsB,CAAC;IACpE,IAAM,OAAO,GAAG;QACd,MAAM,EAAE,aAAa;QACrB,KAAK,OAAA;QACL,CAAC,EAAE,CAAC;QACJ,CAAC,EAAE,MAAM,GAAG,aAAa;KAC1B,CAAC;IAGF,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;QACtB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;QACnB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;KACf;IAED,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,eAAe,EAAE;QAE3C,OAAO,CAAC,MAAM,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC;QACxD,OAAO,CAAC,KAAK,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;QACtD,OAAO,CAAC,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;QAC9C,OAAO,CAAC,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;QAG9C,IAAI,CAAC,KAAK,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,CAAC,EAAE;YAErC,OAAO,CAAC,MAAM,GAAG,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;YACtD,OAAO,CAAC,KAAK,GAAG,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;YACpD,OAAO,CAAC,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5C,OAAO,CAAC,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;SAC7C;KACF;IAGD,OAAO;QACL,gBAAgB,EAAE;YAChB,MAAM,EAAE,sBAAsB;YAC9B,KAAK,OAAA;YACL,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,CAAC;SACL;QACD,OAAO,SAAA;KACR,CAAC;AACJ,CAAC;AArED,mDAqEC","sourcesContent":["import {StatusAddressToolBarHeight} from './statusAddressToolBarHeight.interfaces';\nimport {IosOffsets} from '../helpers/constants.interfaces';\n\n/**\n * Get the current height of the iOS status and address bar\n */\nexport default function getIosStatusAddressToolBarHeight(iosOffsets: IosOffsets): StatusAddressToolBarHeight {\n  // Determine version for the right offsets\n  const match = (navigator.appVersion).match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n  const majorVersion = parseInt(match[1], 10);\n  const versionOffsets = iosOffsets[majorVersion];\n\n  // Determine screen width/height to determine iPhone X series address bar height\n  const {width, height} = window.screen;\n  const isIphoneXSeries = (width === 812 || height === 812) || (width === 896 || height === 896);\n\n  // Determine if iPad Pro with no touchID for higher status bar\n  const {innerWidth, innerHeight} = window;\n  const isIpadNoTouch = (\n    (innerHeight + versionOffsets.ADDRESS_BAR + versionOffsets.STATUS_BAR_PRO) === height ||\n    (innerWidth + versionOffsets.ADDRESS_BAR + versionOffsets.STATUS_BAR_PRO) === width\n  );\n\n  // Determine address bar height\n  let statusBarHeight;\n  if (isIphoneXSeries) {\n    statusBarHeight = versionOffsets.STATUS_BAR_X;\n  } else if (isIpadNoTouch) {\n    statusBarHeight = versionOffsets.STATUS_BAR_PRO;\n  } else {\n    statusBarHeight = versionOffsets.STATUS_BAR;\n  }\n\n  const statusAddressBarHeight = statusBarHeight + versionOffsets.ADDRESS_BAR;\n  const toolBarHeight = height - innerHeight - statusAddressBarHeight;\n  const toolBar = {\n    height: toolBarHeight,\n    width,\n    x: 0,\n    y: height - toolBarHeight,\n  };\n\n  // The status and address can be smaller due to a \"manual\" scroll meaning there is no toolbar\n  if (toolBar.height < 0) {\n    toolBar.height = 0;\n    toolBar.y = 0;\n  }\n  // Add the handlebar on iPhone X series as a blockout, it can colour with the background\n  if (toolBar.height === 0 && isIphoneXSeries) {\n    // Needs to be verbose to support the correct injection\n    toolBar.height = versionOffsets.HOME_BAR.DEFAULT.height;\n    toolBar.width = versionOffsets.HOME_BAR.DEFAULT.width;\n    toolBar.x = versionOffsets.HOME_BAR.DEFAULT.x;\n    toolBar.y = versionOffsets.HOME_BAR.DEFAULT.y;\n\n    // For the XS Max\n    if ((width === 896 || height === 896)) {\n      // Needs to be verbose to support the correct injection\n      toolBar.height = versionOffsets.HOME_BAR.LARGE.height;\n      toolBar.width = versionOffsets.HOME_BAR.LARGE.width;\n      toolBar.x = versionOffsets.HOME_BAR.LARGE.x;\n      toolBar.y = versionOffsets.HOME_BAR.LARGE.y;\n    }\n  }\n\n  // Determine status, address and tool bar height and width\n  return {\n    statusAddressBar: {\n      height: statusAddressBarHeight,\n      width,\n      x: 0,\n      y: 0,\n    },\n    toolBar,\n  };\n}\n"]}