{"version":3,"file":"utils.js","sourceRoot":"","sources":["../lib/utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;;GAEG;AACH,SAAsB,eAAe;;;;;wBACN,qBAAM,OAAO,CAAC,kBAAkB,EAAE,EAAA;;oBAAxD,KAAsB,CAAA,SAAkC,CAAA,aAAvC,EAAjB,YAAY,mBAAG,EAAE,KAAA;oBACnB,OAAO,GAAG;wBACf,aAAa;wBACb,gBAAgB;wBAChB,SAAS;wBACT,cAAc;wBACd,YAAY;qBACZ,CAAC;oBAEI,IAAI,GAAG,OAAO,CAAC,MAAM,CAA4B,UAAC,MAAM,EAAE,GAAG;wBAClE,IAAM,KAAK,GAAW,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;wBAC9C,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;wBAClC,OAAO,MAAM,CAAC;oBACf,CAAC,EAAE,EAAE,CAAC,CAAC;oBAED,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;oBAEtE,4CAAY,IAAI,KAAE,mBAAmB,qBAAA,KAAG;;;;CACxC;AAnBD,0CAmBC;AAED;;GAEG;AACH,SAAsB,2BAA2B,CAAC,OAA0B;;;;;;yBAKvE,OAAO,CAAC,YAAY,EAApB,wBAAoB;oBACvB,KAAA,OAAO,CAAA;oBAAgB,qBAAM,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,EAAA;;oBAAjE,GAAQ,YAAY,GAAG,SAA0C,CAAC;;;yBAG/D,OAAO,CAAC,cAAc,EAAtB,wBAAsB;oBACzB,KAAA,OAAO,CAAA;oBAAkB,qBAAM,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,EAAA;;oBAArE,GAAQ,cAAc,GAAG,SAA4C,CAAC;;;yBAGnE,OAAO,CAAC,oBAAoB,EAA5B,wBAA4B;oBAC/B,KAAA,OAAO,CAAA;oBAAwB,qBAAM,cAAc,CAAC,OAAO,CAAC,oBAAoB,CAAC,EAAA;;oBAAjF,GAAQ,oBAAoB,GAAG,SAAkD,CAAC;;wBAGnF,sBAAO,OAAO,EAAC;;;;CACf;AAlBD,kEAkBC;AAED;;EAEE;AACF,SAAsB,cAAc,CAAC,QAAuB;;;YAC3D,+EAA+E;YAC/E,sBAAQ,QAAuC,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,aAAa,EAAE,EAAjB,CAAiB,CAA6B,EAAC;;;CACxG;AAHD,wCAGC;AAED;;;;;GAKG;AACH,SAAgB,UAAU,CAAC,aAAkB,EAAE,OAAgB;IAC9D,OAAO;QACN,YAAY,EAAE,aAAa,CAAC,YAAY,IAAI,OAAO,CAAC,YAAY;QAChE,cAAc,EAAE,aAAa,CAAC,cAAc,IAAI,OAAO,CAAC,cAAc;QACtE,UAAU,EAAE,aAAa,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU;KAC1D,CAAC;AACH,CAAC;AAND,gCAMC;AAED;;GAEG;AACH,SAAgB,SAAS,CAAC,EAAc;IACvC,OAAO,EAAE,CAAC,WAAW,CAAC,IAAI,KAAK,eAAe,CAAC;AAChD,CAAC;AAFD,8BAEC","sourcesContent":["import { ElementFinder, ProtractorBrowser } from 'protractor';\nimport { Folders } from 'webdriver-image-comparison/build/base.interface';\n\nimport { InstanceData, BaseMethodOptions } from './interfaces';\n\n\ndeclare let browser: ProtractorBrowser;\n\n/**\n * Get the instance data\n */\nexport async function getInstanceData(): Promise<InstanceData> {\n\tconst { capabilities = {} } = await browser.getProcessedConfig();\n\tconst options = [\n\t\t'browserName',\n\t\t'browserVersion',\n\t\t'logName',\n\t\t'platformName',\n\t\t'deviceName'\n\t];\n\n\tconst data = options.reduce<{ [key: string]: string }>((result, key) => {\n\t\tconst value: string = capabilities[key] || '';\n\t\tresult[key] = value.toLowerCase();\n\t\treturn result;\n\t}, {});\n\n\tconst nativeWebScreenshot = Boolean(capabilities.nativeWebScreenshot);\n\n\treturn { ...data, nativeWebScreenshot };\n}\n\n/**\n * Transform all `hideElements`, `removeElements` and `hideAfterFirstScroll`-elements to WebElements\n */\nexport async function optionElementsToWebElements(options: BaseMethodOptions) {\n\t// TODO (vitalie-ly): It's bad solution to mutate variable.\n\t// The function should be pure and hasn't side effects\n\t// I think it should be fixed in future \n\n\tif (options.hideElements) {\n\t\toptions.hideElements = await getWebElements(options.hideElements);\n\t}\n\n\tif (options.removeElements) {\n\t\toptions.removeElements = await getWebElements(options.removeElements);\n\t}\n\n\tif (options.hideAfterFirstScroll) {\n\t\toptions.hideAfterFirstScroll = await getWebElements(options.hideAfterFirstScroll);\n\t}\n\n\treturn options;\n}\n\n/**\n * Get all the web elements\n*/\nexport async function getWebElements(elements: HTMLElement[]) {\n\t// TODO (vitalie-ly): I think there is wrong type in webdriver-image-comparison\n\treturn (elements as unknown as ElementFinder[]).map(e => e.getWebElement()) as unknown as HTMLElement[];\n}\n\n/**\n * Get the folders data\n *\n * If folder options are passed in use those values\n * Otherwise, use the values set during instantiation\n */\nexport function getFolders(methodOptions: any, folders: Folders): Folders {\n\treturn {\n\t\tactualFolder: methodOptions.actualFolder || folders.actualFolder,\n\t\tbaselineFolder: methodOptions.baselineFolder || folders.baselineFolder,\n\t\tdiffFolder: methodOptions.diffFolder || folders.diffFolder\n\t};\n}\n\n/**\n * @description Detect if a function is asynchronous\n */\nexport function isAsyncFn(fn: () => void): boolean {\n\treturn fn.constructor.name === 'AsyncFunction';\n}\n"]}