{"version":3,"file":"protractor.image.compare.js","sourceRoot":"","sources":["../lib/protractor.image.compare.ts"],"names":[],"mappings":"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","sourcesContent":["import { ElementFinder, ProtractorBrowser } from 'protractor';\nimport { SaveFullPageMethodOptions } from 'webdriver-image-comparison/build/commands/fullPage.interfaces';\nimport { SaveScreenMethodOptions } from 'webdriver-image-comparison/build/commands/screen.interfaces';\nimport { SaveElementMethodOptions } from 'webdriver-image-comparison/build/commands/element.interfaces';\nimport {\n\tBaseClass,\n\tClassOptions,\n\tcheckElement,\n\tcheckFullPageScreen,\n\tcheckScreen,\n\tsaveElement,\n\tsaveFullPageScreen,\n\tsaveScreen,\n} from 'webdriver-image-comparison';\n\nimport { getFolders, getInstanceData, optionElementsToWebElements, getWebElements, isAsyncFn } from './utils';\n\n\ndeclare let browser: ProtractorBrowser;\n\nexport default class ProtractorImageComparison extends BaseClass {\n\n\t/**\n\t * @description This method create new ProtractorImageComparison instance\n\t * and provides to use async functions in library options\n\t */\n\tstatic async build(options: ClassOptions): Promise<ProtractorImageComparison> {\n\t\tconst instance = new ProtractorImageComparison(options);\n\t\tif (options.baselineFolder && isAsyncFn(options.baselineFolder)) {\n\t\t\tconst baselineFolderPath = await options.baselineFolder(options);\n\t\t\tinstance.folders.baselineFolder = baselineFolderPath;\n\t\t}\n\t\treturn instance;\n\t}\n\n\n\t/**\n\t * Saves an image of an element\n\t */\n\tasync saveElement(element: ElementFinder, tag: string, options: SaveElementMethodOptions = {}) {\n\t\tbrowser.instanceData = browser.instanceData || await getInstanceData();\n\n\t\toptions = await optionElementsToWebElements(options);\n\n\t\treturn saveElement(\n\t\t\t{\n\t\t\t\texecutor: browser.executeScript,\n\t\t\t\tscreenShot: browser.takeScreenshot\n\t\t\t},\n\t\t\tbrowser.instanceData,\n\t\t\tgetFolders(options, this.folders),\n\t\t\telement.getWebElement() as unknown as HTMLElement,\n\t\t\ttag,\n\t\t\t{\n\t\t\t\twic: this.defaultOptions,\n\t\t\t\tmethod: options\n\t\t\t},\n\t\t);\n\t}\n\n\t/**\n\t * Saves an image of a viewport\n\t */\n\tasync saveScreen(tag: string, options: SaveScreenMethodOptions = {}) {\n\t\tbrowser.instanceData = browser.instanceData || await getInstanceData();\n\n\t\toptions = await optionElementsToWebElements(options);\n\n\t\treturn saveScreen(\n\t\t\t{\n\t\t\t\texecutor: browser.executeScript,\n\t\t\t\tscreenShot: browser.takeScreenshot,\n\t\t\t},\n\t\t\tbrowser.instanceData,\n\t\t\tgetFolders(options, this.folders),\n\t\t\ttag,\n\t\t\t{\n\t\t\t\twic: this.defaultOptions,\n\t\t\t\tmethod: options,\n\t\t\t},\n\t\t);\n\t}\n\n\t/**\n\t * Saves an image of the complete screen\n\t */\n\tasync saveFullPageScreen(tag: string, options: SaveFullPageMethodOptions = {}) {\n\t\tbrowser.instanceData = browser.instanceData || await getInstanceData();\n\n\t\toptions = await optionElementsToWebElements(options);\n\n\t\tif (options.hideAfterFirstScroll) {\n\t\t\toptions.hideAfterFirstScroll = await getWebElements(options.hideAfterFirstScroll);\n\t\t}\n\n\t\treturn saveFullPageScreen(\n\t\t\t{\n\t\t\t\texecutor: browser.executeScript,\n\t\t\t\tscreenShot: browser.takeScreenshot\n\t\t\t},\n\t\t\tbrowser.instanceData,\n\t\t\tgetFolders(options, this.folders),\n\t\t\ttag,\n\t\t\t{\n\t\t\t\twic: this.defaultOptions,\n\t\t\t\tmethod: options,\n\t\t\t},\n\t\t);\n\t}\n\n\t/**\n\t * Compare an image of an element\n\t */\n\tasync checkElement(element: ElementFinder, tag: string, options: SaveElementMethodOptions = {}) {\n\t\tbrowser.instanceData = browser.instanceData || await getInstanceData();\n\n\t\toptions = await optionElementsToWebElements(options);\n\n\t\treturn checkElement(\n\t\t\t{\n\t\t\t\texecutor: browser.executeScript,\n\t\t\t\tscreenShot: browser.takeScreenshot\n\t\t\t},\n\t\t\tbrowser.instanceData,\n\t\t\tgetFolders(options, this.folders),\n\t\t\telement.getWebElement() as unknown as HTMLElement,\n\t\t\ttag,\n\t\t\t{\n\t\t\t\twic: this.defaultOptions,\n\t\t\t\tmethod: options,\n\t\t\t},\n\t\t);\n\t}\n\n\t/**\n\t * Compares an image of a viewport\n\t */\n\tasync checkScreen(tag: string, options: SaveScreenMethodOptions = {}) {\n\t\tbrowser.instanceData = browser.instanceData || await getInstanceData();\n\n\t\toptions = await optionElementsToWebElements(options);\n\n\t\treturn checkScreen(\n\t\t\t{\n\t\t\t\texecutor: browser.executeScript,\n\t\t\t\tscreenShot: browser.takeScreenshot\n\t\t\t},\n\t\t\tbrowser.instanceData,\n\t\t\tgetFolders(options, this.folders),\n\t\t\ttag,\n\t\t\t{\n\t\t\t\twic: this.defaultOptions,\n\t\t\t\tmethod: options,\n\t\t\t},\n\t\t);\n\t}\n\n\t/**\n\t * Compares an image of a viewport\n\t */\n\tasync checkFullPageScreen(tag: string, options: SaveFullPageMethodOptions = {}) {\n\t\tbrowser.instanceData = browser.instanceData || await getInstanceData();\n\n\t\toptions = await optionElementsToWebElements(options);\n\n\t\treturn checkFullPageScreen(\n\t\t\t{\n\t\t\t\texecutor: browser.executeScript,\n\t\t\t\tscreenShot: browser.takeScreenshot\n\t\t\t},\n\t\t\tbrowser.instanceData,\n\t\t\tgetFolders(options, this.folders),\n\t\t\ttag,\n\t\t\t{\n\t\t\t\twic: this.defaultOptions,\n\t\t\t\tmethod: options,\n\t\t\t},\n\t\t);\n\t}\n}\n"]}